
Problem Statement: A Banking interface. 
Needs:
  Super good reliability
  Never loose/corrupt data
  Basic Banking transactions
Maybe:
  Transaction Speed
  Usability speed (ie Try to deposit a large amount -> error too big -> have to deposit multiple small parts, wasting time)

	     CLIENT:

Input(Type and arguments) <-> Timer
|
Geneve Packaging   Server IP & Port    Print Output
|                     |        |         ^
Send <----------------+        v   Geneve Unpacking
   |                                ^
   +-------------------------> Listen


            SERVER:      

Listen                                          
|                                          
Queue                                         
|                                         
Geneve Unpacking                                         
|                                         
ID Verification <-> Log           
|   +--> Client IP and Port --> Send
|                                 ^          
Database modification             |                             
|           |                     |                       
|         Print Errors            |                                
|                                 |         
Geneve Packaging -----------------+                      

SERVER
+--------+         +-----------------------+
| Listen |--Queue--| ID Verification       |  +----------+
+--------+         | Database Modification +--+ Database |
                   | Send                  |  +----------+
		   +-----------------------+

CLIENT
+--------+
| Input  |
| Send   |
| Listen |
| Print  |
+--------+
Timer: Client can only send 1 request per 1 seconds because of the timestamp.
Send(client): Handles Dropped packets by resending every 20 seconds 6 times if there's no reply (timestamp is not changed). New inputs override this.
Queue: 2d byte array. Listen appends to this, Geneve unpacking deletes from the beginning.
ID Verification: matches the given username to a database entry. This also checks the log for repeated requests. Repeated requests are re-logged, deleting their old log entry, and stop there.
Log: Stores requests in an array of datatype: (username, timestamp) Stores requests until 120 seconds after the timestamp
Client IP & Port: Stored in an array of (username, UDPConn, timestamp), Send deletes from this.
Geneve Packaging (server): Any module before this can skip directly to here with and error code >1.
Print Output: Handles error codes

CLIENT OPTION
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Option Class         |      Type     |R|R|R| Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       User ID                       |Timestamp|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Timestamp    |                  Value                |
+-+-+-+-+-+-+-+-+-+-+-+-+                                       +
|                                                               |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Types:
  0 = Check Balance (no options)
  1 = Widthdraw ()
  2 = Deposit (option: int)
  3 = Open Accout (possibly an option for a password hash)

Timestamp: Seconds since midnight UT

Value: An integer amount of cents to be interpreted based on the type. Stored in little endian format in case the length is accidentally made too large.
  Check Balance = null
  Withdraw = Amount to withdraw
  Deposit = Amount to deposit
  Open Account = Amount to deposit


SERVER OPTION
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Option Class         |  Error Code   |R|R|R| Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       User ID                       |Timestamp|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Timestamp    |               Balance                 |
+-+-+-+-+-+-+-+-+-+-+-+-+                                       +
|                                                               | 
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Error Codes:
  0 = Sucess
  1 = Balance
  other int= converted to error message by client

Balance: This is null/zero if the error code isn't 1. Stored exactly the same as the Value
