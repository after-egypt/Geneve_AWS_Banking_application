python scapy for endianess
Client cant send and listen on the same port as different processes

Problem Statement: A Banking interface. 
Needs:
  Super good reliability
  Never loose/corrupt data
  Basic Banking transactions
Maybe:
  Transaction Speed
  Interface never gets in the way of the user

High Level Overview:
  Server:
    Listens
    verifies id
    Modifies Database
    Sends Balance/Error code
  Client:
    Records input
    Sends requests
    Listens
    Prints

Lower level description:
SERVER
+--------+
| Listen |
+--------+
   |
 Queue
   |
+--v--------------------+ 
| Unpacking             |               +-------------+
| ID Verification <----------->Log<-----| Log Cleaner |
| Database Modification <--> Database   +-------------+
| Packaging             |
| Send                  |  
+-----------------------+

CLIENT
+-----------+      +-------------+
| Input     |   +--> Log Cleaner |
| Packaging ----+  +----|--------+
| Send      |   |       v 
+---^-------+   +<---> Log
    |     
+---v-------+ 
| Listen    |
| Unpacking |
| Print     |
+-----------+

CLIENT:
  Log: This is a system-wide file with the latest request number. The client's request number is this number +1, after the log is checked, Log Clearner is run
  Log Cleaner: Increments the log number by 1 and loops the number back to 0 once it reaches 2^16.
  Send: Handles Dropped packets by resending every 20 seconds 6 times if there's no reply (timestamp is not changed). After the first send, this program forks for the listen process while continuing to run in the background. If there's no reply after all sends, either this process kills the listener and prints the error, or signals the listener to stop with an error.
  Listen: Once a response is received, this kills the send process.
  Print Output: Handles error codes

SERVER:
  Queue: 2d byte array. Listen appends to this unless the queue is full. In that case an error is passed to Packaging. Unpacking deletes from the beginning.
  ID Verification: If the request is to open an account, the database assigns it the latest unused userID. Elsewise it matches the given username to a database entry. This also checks the log for repeated requests(first checking that Log cleaner is not using the file). Repeated requests are only re-logged, deleting their old :log entry.
  Log: Stores requests in an array of datatype: (username, timestamp) Stores requests until 120 seconds after the timestamp
  Log Cleaner: Launched in the background as part of the server startup. Runs every 10 seconds.
  Packaging: Any module before this can skip directly to here with and error code >1.
  Send: uses the ip address and port of the client who's request its processing. 

CLIENT OPTION: Change balance
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Option Class         |      0        |R|R|R| Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       User ID                                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|             Sequence Number                                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       
|                        Value                                  |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Request Number: This is incremented client-side. There is one number per machine/IP Address.

Value: A signed integer amount of cents to be added to the balance(the server responds the new balance)(negative amounts subtract from the balance. Zero amounts querey the balance) Stored in little endian format in case the length is accidentally made too large.

CLIENT OPTION: Open Account
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Option Class         |      1        |R|R|R| Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                      Random ID                                |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|             Sequence Number                                   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+       
|                        TBD                                    |
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

Random ID: This is generated client-side, and is used in case the packet is lost.

TBD: User identification(i.e. Name, Socal security). Not implemented yet

SERVER RESPONSE: Account Made
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Option Class(vendor specific) |   2           |R|R|R| Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       Random ID                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Sequence Number                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|            User ID                                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +

User ID: This is generated by the server as the lowest unused number/ID.

SERVER RESPONSE: Change Balance
 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| Option Class(vendor specific) |   3           |R|R|R| Length  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                       User ID                                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Sequence Number                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|F|  error code                 |       balance                 |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+                               +
|                                                               | 
~                                                               ~
|                                                               |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
Error Codes:
  0 = Sucess
  1 = Balance
  other int= converted to error message by client

Balance: This is null/zero if the error is fatal. Stored exactly the same as the Value

F (Fatal): This bit is 1 if the error prevented the balance change to occur.
